'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * A namespaced client for the
 * `/v1/shopping/flight-offers` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.shopping.flightOffers;
 * ```
 *
 * @param {Client} client
 */
var FlightOffers = function () {
  function FlightOffers(client) {
    _classCallCheck(this, FlightOffers);

    this.client = client;
  }

  /**
   * Find the cheapest bookable flights for a date.
   *
   * @param {Object} params
   * @param {string} params.origin City/Airport IATA code from which the flight
   *   will depart. BOS, for example.
   * @param {string} params.destination City/Airport IATA code to which the
   *   traveler is going. PAR, for example
   * @param {string} params.departureDate The departure date for the flight
   * @return {Promise.<Response,ResponseError>} a Promise
   *
   * Find the cheapest flights from New-York to Madrid for Summer 2019
   *
   * ```js
   * amadeus.shopping.flightOffers.get({
   *   origin: 'NYC',
   *   destination: 'MAD',
   *   departureDate: '2019-08-01'
   * });
   * ```
   */


  _createClass(FlightOffers, [{
    key: 'get',
    value: function get() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      return this.client.get('/v1/shopping/flight-offers', params);
    }
  }]);

  return FlightOffers;
}();

exports.default = FlightOffers;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hbWFkZXVzL25hbWVzcGFjZXMvc2hvcHBpbmcvZmxpZ2h0X29mZmVycy5qcyJdLCJuYW1lcyI6WyJGbGlnaHRPZmZlcnMiLCJjbGllbnQiLCJwYXJhbXMiLCJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7OztJQWFNQSxZO0FBQ0osd0JBQVlDLE1BQVosRUFBb0I7QUFBQTs7QUFDbEIsU0FBS0EsTUFBTCxHQUFjQSxNQUFkO0FBQ0Q7O0FBRUQ7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBcUJpQjtBQUFBLFVBQWJDLE1BQWEsdUVBQUosRUFBSTs7QUFDZixhQUFPLEtBQUtELE1BQUwsQ0FBWUUsR0FBWixDQUFnQiw0QkFBaEIsRUFBOENELE1BQTlDLENBQVA7QUFDRDs7Ozs7O2tCQUdZRixZIiwiZmlsZSI6ImZsaWdodF9vZmZlcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEEgbmFtZXNwYWNlZCBjbGllbnQgZm9yIHRoZVxuICogYC92MS9zaG9wcGluZy9mbGlnaHQtb2ZmZXJzYCBlbmRwb2ludHNcbiAqXG4gKiBBY2Nlc3MgdmlhIHRoZSB7QGxpbmsgQW1hZGV1c30gb2JqZWN0XG4gKlxuICogYGBganNcbiAqIGxldCBhbWFkZXVzID0gbmV3IEFtYWRldXMoKTtcbiAqIGFtYWRldXMuc2hvcHBpbmcuZmxpZ2h0T2ZmZXJzO1xuICogYGBgXG4gKlxuICogQHBhcmFtIHtDbGllbnR9IGNsaWVudFxuICovXG5jbGFzcyBGbGlnaHRPZmZlcnMge1xuICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBGaW5kIHRoZSBjaGVhcGVzdCBib29rYWJsZSBmbGlnaHRzIGZvciBhIGRhdGUuXG4gICAqXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXNcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5vcmlnaW4gQ2l0eS9BaXJwb3J0IElBVEEgY29kZSBmcm9tIHdoaWNoIHRoZSBmbGlnaHRcbiAgICogICB3aWxsIGRlcGFydC4gQk9TLCBmb3IgZXhhbXBsZS5cbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5kZXN0aW5hdGlvbiBDaXR5L0FpcnBvcnQgSUFUQSBjb2RlIHRvIHdoaWNoIHRoZVxuICAgKiAgIHRyYXZlbGVyIGlzIGdvaW5nLiBQQVIsIGZvciBleGFtcGxlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMuZGVwYXJ0dXJlRGF0ZSBUaGUgZGVwYXJ0dXJlIGRhdGUgZm9yIHRoZSBmbGlnaHRcbiAgICogQHJldHVybiB7UHJvbWlzZS48UmVzcG9uc2UsUmVzcG9uc2VFcnJvcj59IGEgUHJvbWlzZVxuICAgKlxuICAgKiBGaW5kIHRoZSBjaGVhcGVzdCBmbGlnaHRzIGZyb20gTmV3LVlvcmsgdG8gTWFkcmlkIGZvciBTdW1tZXIgMjAxOVxuICAgKlxuICAgKiBgYGBqc1xuICAgKiBhbWFkZXVzLnNob3BwaW5nLmZsaWdodE9mZmVycy5nZXQoe1xuICAgKiAgIG9yaWdpbjogJ05ZQycsXG4gICAqICAgZGVzdGluYXRpb246ICdNQUQnLFxuICAgKiAgIGRlcGFydHVyZURhdGU6ICcyMDE5LTA4LTAxJ1xuICAgKiB9KTtcbiAgICogYGBgXG4gICAqL1xuICBnZXQocGFyYW1zID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuZ2V0KCcvdjEvc2hvcHBpbmcvZmxpZ2h0LW9mZmVycycsIHBhcmFtcyk7XG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRmxpZ2h0T2ZmZXJzO1xuIl19