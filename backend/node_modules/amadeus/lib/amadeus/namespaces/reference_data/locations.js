'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _airports = require('./locations/airports');

var _airports2 = _interopRequireDefault(_airports);

var _pois = require('./locations/pois');

var _pois2 = _interopRequireDefault(_pois);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * A namespaced client for the
 * `/v2/reference-data/locations` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.referenceData.locations;
 * ```
 *
 * @param {Client} client
 * @property {Airports} airports
 */
var Locations = function () {
  function Locations(client) {
    _classCallCheck(this, Locations);

    this.client = client;
    this.airports = new _airports2.default(client);
    this.pointsOfInterest = new _pois2.default(client);
  }

  /**
   * Returns a list of airports and cities matching a given keyword.
   *
   * @param {Object} params
   * @param {string} params.keyword keyword that should represent the start of
   *   a word in a city or airport name or code
   * @param {string} params.subType the type of location to search for
   * @return {Promise.<Response,ResponseError>} a Promise
   *
   * Find any location starting with 'lon'
   *
   * ```js
   * amadeus.referenceData.location.get({
   *   keyword: 'lon',
   *   subType: Amadeus.location.any
   * });
   * ```
   */


  _createClass(Locations, [{
    key: 'get',
    value: function get() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      return this.client.get('/v1/reference-data/locations', params);
    }
  }]);

  return Locations;
}();

exports.default = Locations;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9hbWFkZXVzL25hbWVzcGFjZXMvcmVmZXJlbmNlX2RhdGEvbG9jYXRpb25zLmpzIl0sIm5hbWVzIjpbIkxvY2F0aW9ucyIsImNsaWVudCIsImFpcnBvcnRzIiwiQWlycG9ydHMiLCJwb2ludHNPZkludGVyZXN0IiwiUG9pbnRzT2ZJbnRlcmVzdCIsInBhcmFtcyIsImdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7OztBQUNBOzs7Ozs7OztBQUVBOzs7Ozs7Ozs7Ozs7OztJQWNNQSxTO0FBQ0oscUJBQVlDLE1BQVosRUFBb0I7QUFBQTs7QUFDbEIsU0FBS0EsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsU0FBS0MsUUFBTCxHQUFnQixJQUFJQyxrQkFBSixDQUFhRixNQUFiLENBQWhCO0FBQ0EsU0FBS0csZ0JBQUwsR0FBd0IsSUFBSUMsY0FBSixDQUFxQkosTUFBckIsQ0FBeEI7QUFDRDs7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkFrQmlCO0FBQUEsVUFBYkssTUFBYSx1RUFBSixFQUFJOztBQUNmLGFBQU8sS0FBS0wsTUFBTCxDQUFZTSxHQUFaLENBQWdCLDhCQUFoQixFQUFnREQsTUFBaEQsQ0FBUDtBQUNEOzs7Ozs7a0JBR1lOLFMiLCJmaWxlIjoibG9jYXRpb25zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEFpcnBvcnRzIGZyb20gJy4vbG9jYXRpb25zL2FpcnBvcnRzJztcbmltcG9ydCBQb2ludHNPZkludGVyZXN0IGZyb20gJy4vbG9jYXRpb25zL3BvaXMnO1xuXG4vKipcbiAqIEEgbmFtZXNwYWNlZCBjbGllbnQgZm9yIHRoZVxuICogYC92Mi9yZWZlcmVuY2UtZGF0YS9sb2NhdGlvbnNgIGVuZHBvaW50c1xuICpcbiAqIEFjY2VzcyB2aWEgdGhlIHtAbGluayBBbWFkZXVzfSBvYmplY3RcbiAqXG4gKiBgYGBqc1xuICogbGV0IGFtYWRldXMgPSBuZXcgQW1hZGV1cygpO1xuICogYW1hZGV1cy5yZWZlcmVuY2VEYXRhLmxvY2F0aW9ucztcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7Q2xpZW50fSBjbGllbnRcbiAqIEBwcm9wZXJ0eSB7QWlycG9ydHN9IGFpcnBvcnRzXG4gKi9cbmNsYXNzIExvY2F0aW9ucyB7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgIHRoaXMuYWlycG9ydHMgPSBuZXcgQWlycG9ydHMoY2xpZW50KTtcbiAgICB0aGlzLnBvaW50c09mSW50ZXJlc3QgPSBuZXcgUG9pbnRzT2ZJbnRlcmVzdChjbGllbnQpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBsaXN0IG9mIGFpcnBvcnRzIGFuZCBjaXRpZXMgbWF0Y2hpbmcgYSBnaXZlbiBrZXl3b3JkLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMua2V5d29yZCBrZXl3b3JkIHRoYXQgc2hvdWxkIHJlcHJlc2VudCB0aGUgc3RhcnQgb2ZcbiAgICogICBhIHdvcmQgaW4gYSBjaXR5IG9yIGFpcnBvcnQgbmFtZSBvciBjb2RlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMuc3ViVHlwZSB0aGUgdHlwZSBvZiBsb2NhdGlvbiB0byBzZWFyY2ggZm9yXG4gICAqIEByZXR1cm4ge1Byb21pc2UuPFJlc3BvbnNlLFJlc3BvbnNlRXJyb3I+fSBhIFByb21pc2VcbiAgICpcbiAgICogRmluZCBhbnkgbG9jYXRpb24gc3RhcnRpbmcgd2l0aCAnbG9uJ1xuICAgKlxuICAgKiBgYGBqc1xuICAgKiBhbWFkZXVzLnJlZmVyZW5jZURhdGEubG9jYXRpb24uZ2V0KHtcbiAgICogICBrZXl3b3JkOiAnbG9uJyxcbiAgICogICBzdWJUeXBlOiBBbWFkZXVzLmxvY2F0aW9uLmFueVxuICAgKiB9KTtcbiAgICogYGBgXG4gICAqL1xuICBnZXQocGFyYW1zID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuZ2V0KCcvdjEvcmVmZXJlbmNlLWRhdGEvbG9jYXRpb25zJywgcGFyYW1zKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBMb2NhdGlvbnM7XG4iXX0=