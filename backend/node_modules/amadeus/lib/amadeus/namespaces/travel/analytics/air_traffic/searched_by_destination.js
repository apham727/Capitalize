'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * A namespaced client for the
 * `/v1/travel/analytics/air-traffic/searched/by-destination` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.travel.analytics.AirTraffic.SearchedByDestination;
 * ```
 *
 * @param {Client} client
 */
var SearchedByDestination = function () {
  function SearchedByDestination(client) {
    _classCallCheck(this, SearchedByDestination);

    this.client = client;
  }

  /**
   * Returns a list of air traffic reports based on the number of people searching.
   *
   * @param {Object} params
   * @param {string} params.originCityCode IATA code of the origin city - e.g. MAD for
   *   Madrid - required
   * @param {string} params.destinationCityCode IATA code of the destination city - e.g. NYC for
   *   New-York - required
   * @param {string} params.searchPeriod period when consumers are travelling in
   *   YYYY-MM format
   * @param {string} params.marketCountryCode IATA code of the country from which searches were made
   *   e.g. ``"ES"`` for Spain
   * @return {Promise.<Response,ResponseError>} a Promise
   *
   * How many people in Spain searched for a trip from Madrid to New-York in September 2017?
   *
   * ```js
   * amadeus.travel.analytics.AirTraffic.SearchedByDestination.get({
   *   originCityCode: 'MAD',
   *   destinationCityCode: 'NYC',
   *   searchPeriod: '2017-08',
   *   marketCountryCode: 'ES'
   * });
   * ```
   */


  _createClass(SearchedByDestination, [{
    key: 'get',
    value: function get() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      return this.client.get('/v1/travel/analytics/air-traffic/searched/by-destination', params);
    }
  }]);

  return SearchedByDestination;
}();

exports.default = SearchedByDestination;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hbWFkZXVzL25hbWVzcGFjZXMvdHJhdmVsL2FuYWx5dGljcy9haXJfdHJhZmZpYy9zZWFyY2hlZF9ieV9kZXN0aW5hdGlvbi5qcyJdLCJuYW1lcyI6WyJTZWFyY2hlZEJ5RGVzdGluYXRpb24iLCJjbGllbnQiLCJwYXJhbXMiLCJnZXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7Ozs7OztJQWFNQSxxQjtBQUNKLGlDQUFZQyxNQUFaLEVBQW9CO0FBQUE7O0FBQ2xCLFNBQUtBLE1BQUwsR0FBY0EsTUFBZDtBQUNEOztBQUVEOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkF5QmlCO0FBQUEsVUFBYkMsTUFBYSx1RUFBSixFQUFJOztBQUNmLGFBQU8sS0FBS0QsTUFBTCxDQUFZRSxHQUFaLENBQWdCLDBEQUFoQixFQUE0RUQsTUFBNUUsQ0FBUDtBQUNEOzs7Ozs7a0JBR1lGLHFCIiwiZmlsZSI6InNlYXJjaGVkX2J5X2Rlc3RpbmF0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIG5hbWVzcGFjZWQgY2xpZW50IGZvciB0aGVcbiAqIGAvdjEvdHJhdmVsL2FuYWx5dGljcy9haXItdHJhZmZpYy9zZWFyY2hlZC9ieS1kZXN0aW5hdGlvbmAgZW5kcG9pbnRzXG4gKlxuICogQWNjZXNzIHZpYSB0aGUge0BsaW5rIEFtYWRldXN9IG9iamVjdFxuICpcbiAqIGBgYGpzXG4gKiBsZXQgYW1hZGV1cyA9IG5ldyBBbWFkZXVzKCk7XG4gKiBhbWFkZXVzLnRyYXZlbC5hbmFseXRpY3MuQWlyVHJhZmZpYy5TZWFyY2hlZEJ5RGVzdGluYXRpb247XG4gKiBgYGBcbiAqXG4gKiBAcGFyYW0ge0NsaWVudH0gY2xpZW50XG4gKi9cbmNsYXNzIFNlYXJjaGVkQnlEZXN0aW5hdGlvbiB7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSBsaXN0IG9mIGFpciB0cmFmZmljIHJlcG9ydHMgYmFzZWQgb24gdGhlIG51bWJlciBvZiBwZW9wbGUgc2VhcmNoaW5nLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMub3JpZ2luQ2l0eUNvZGUgSUFUQSBjb2RlIG9mIHRoZSBvcmlnaW4gY2l0eSAtIGUuZy4gTUFEIGZvclxuICAgKiAgIE1hZHJpZCAtIHJlcXVpcmVkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMuZGVzdGluYXRpb25DaXR5Q29kZSBJQVRBIGNvZGUgb2YgdGhlIGRlc3RpbmF0aW9uIGNpdHkgLSBlLmcuIE5ZQyBmb3JcbiAgICogICBOZXctWW9yayAtIHJlcXVpcmVkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMuc2VhcmNoUGVyaW9kIHBlcmlvZCB3aGVuIGNvbnN1bWVycyBhcmUgdHJhdmVsbGluZyBpblxuICAgKiAgIFlZWVktTU0gZm9ybWF0XG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMubWFya2V0Q291bnRyeUNvZGUgSUFUQSBjb2RlIG9mIHRoZSBjb3VudHJ5IGZyb20gd2hpY2ggc2VhcmNoZXMgd2VyZSBtYWRlXG4gICAqICAgZS5nLiBgYFwiRVNcImBgIGZvciBTcGFpblxuICAgKiBAcmV0dXJuIHtQcm9taXNlLjxSZXNwb25zZSxSZXNwb25zZUVycm9yPn0gYSBQcm9taXNlXG4gICAqXG4gICAqIEhvdyBtYW55IHBlb3BsZSBpbiBTcGFpbiBzZWFyY2hlZCBmb3IgYSB0cmlwIGZyb20gTWFkcmlkIHRvIE5ldy1Zb3JrIGluIFNlcHRlbWJlciAyMDE3P1xuICAgKlxuICAgKiBgYGBqc1xuICAgKiBhbWFkZXVzLnRyYXZlbC5hbmFseXRpY3MuQWlyVHJhZmZpYy5TZWFyY2hlZEJ5RGVzdGluYXRpb24uZ2V0KHtcbiAgICogICBvcmlnaW5DaXR5Q29kZTogJ01BRCcsXG4gICAqICAgZGVzdGluYXRpb25DaXR5Q29kZTogJ05ZQycsXG4gICAqICAgc2VhcmNoUGVyaW9kOiAnMjAxNy0wOCcsXG4gICAqICAgbWFya2V0Q291bnRyeUNvZGU6ICdFUydcbiAgICogfSk7XG4gICAqIGBgYFxuICAgKi9cbiAgZ2V0KHBhcmFtcyA9IHt9KSB7XG4gICAgcmV0dXJuIHRoaXMuY2xpZW50LmdldCgnL3YxL3RyYXZlbC9hbmFseXRpY3MvYWlyLXRyYWZmaWMvc2VhcmNoZWQvYnktZGVzdGluYXRpb24nLCBwYXJhbXMpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFNlYXJjaGVkQnlEZXN0aW5hdGlvbjsiXX0=