'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * A namespaced client for the
 * `/v1/travel/analytics/fare-searches` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.travel.analytics.fareSearches;
 * ```
 *
 * @param {Client} client
 */
var FareSearches = function () {
  function FareSearches(client) {
    _classCallCheck(this, FareSearches);

    this.client = client;
  }

  /**
   * The Fare Search History API allows to find the number of
   * estimated searches from an origin, optionally a destination,
   * within a time period when travelers are performing the searches.
   *
   * @param {Object} params
   * @param {string} params.origin IATA code of the origin city e.g. BOS for
   *   Boston - required
   * @param {string} params.sourceCountry IATA code of the country from which
   *   fare searches were made - e.g. US for United States
   * @param {string} params.period period of search; can be a year
   *   or a month or a week. ISO format must be used - e.g. 2015
   *   for year; 2015-05 for month and 2015-W04 for week. Period
   *   ranges are not supported. Only periods from year 2011-01 up
   *   to current year and previous month or week are valid. Future
   *   dates are not supported.
   * @return {Promise.<Response,ResponseError>} a Promise
   *
   * Find the air traffic from LHR in January 2011
   *
   * ```js
   * amadeus.travel.analytics.fareSearches.get({
   *   origin: 'LHR',
   *   period: '2011-01'
   * });
   * ```
   */


  _createClass(FareSearches, [{
    key: 'get',
    value: function get() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      return this.client.get('/v1/travel/analytics/fare-searches', params);
    }
  }]);

  return FareSearches;
}();

exports.default = FareSearches;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3NyYy9hbWFkZXVzL25hbWVzcGFjZXMvdHJhdmVsL2FuYWx5dGljcy9mYXJlX3NlYXJjaGVzLmpzIl0sIm5hbWVzIjpbIkZhcmVTZWFyY2hlcyIsImNsaWVudCIsInBhcmFtcyIsImdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7O0lBYU1BLFk7QUFDSix3QkFBWUMsTUFBWixFQUFvQjtBQUFBOztBQUNsQixTQUFLQSxNQUFMLEdBQWNBLE1BQWQ7QUFDRDs7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzswQkEyQmlCO0FBQUEsVUFBYkMsTUFBYSx1RUFBSixFQUFJOztBQUNmLGFBQU8sS0FBS0QsTUFBTCxDQUFZRSxHQUFaLENBQWdCLG9DQUFoQixFQUFzREQsTUFBdEQsQ0FBUDtBQUNEOzs7Ozs7a0JBR1lGLFkiLCJmaWxlIjoiZmFyZV9zZWFyY2hlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBuYW1lc3BhY2VkIGNsaWVudCBmb3IgdGhlXG4gKiBgL3YxL3RyYXZlbC9hbmFseXRpY3MvZmFyZS1zZWFyY2hlc2AgZW5kcG9pbnRzXG4gKlxuICogQWNjZXNzIHZpYSB0aGUge0BsaW5rIEFtYWRldXN9IG9iamVjdFxuICpcbiAqIGBgYGpzXG4gKiBsZXQgYW1hZGV1cyA9IG5ldyBBbWFkZXVzKCk7XG4gKiBhbWFkZXVzLnRyYXZlbC5hbmFseXRpY3MuZmFyZVNlYXJjaGVzO1xuICogYGBgXG4gKlxuICogQHBhcmFtIHtDbGllbnR9IGNsaWVudFxuICovXG5jbGFzcyBGYXJlU2VhcmNoZXMge1xuICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBUaGUgRmFyZSBTZWFyY2ggSGlzdG9yeSBBUEkgYWxsb3dzIHRvIGZpbmQgdGhlIG51bWJlciBvZlxuICAgKiBlc3RpbWF0ZWQgc2VhcmNoZXMgZnJvbSBhbiBvcmlnaW4sIG9wdGlvbmFsbHkgYSBkZXN0aW5hdGlvbixcbiAgICogd2l0aGluIGEgdGltZSBwZXJpb2Qgd2hlbiB0cmF2ZWxlcnMgYXJlIHBlcmZvcm1pbmcgdGhlIHNlYXJjaGVzLlxuICAgKlxuICAgKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMub3JpZ2luIElBVEEgY29kZSBvZiB0aGUgb3JpZ2luIGNpdHkgZS5nLiBCT1MgZm9yXG4gICAqICAgQm9zdG9uIC0gcmVxdWlyZWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IHBhcmFtcy5zb3VyY2VDb3VudHJ5IElBVEEgY29kZSBvZiB0aGUgY291bnRyeSBmcm9tIHdoaWNoXG4gICAqICAgZmFyZSBzZWFyY2hlcyB3ZXJlIG1hZGUgLSBlLmcuIFVTIGZvciBVbml0ZWQgU3RhdGVzXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBwYXJhbXMucGVyaW9kIHBlcmlvZCBvZiBzZWFyY2g7IGNhbiBiZSBhIHllYXJcbiAgICogICBvciBhIG1vbnRoIG9yIGEgd2Vlay4gSVNPIGZvcm1hdCBtdXN0IGJlIHVzZWQgLSBlLmcuIDIwMTVcbiAgICogICBmb3IgeWVhcjsgMjAxNS0wNSBmb3IgbW9udGggYW5kIDIwMTUtVzA0IGZvciB3ZWVrLiBQZXJpb2RcbiAgICogICByYW5nZXMgYXJlIG5vdCBzdXBwb3J0ZWQuIE9ubHkgcGVyaW9kcyBmcm9tIHllYXIgMjAxMS0wMSB1cFxuICAgKiAgIHRvIGN1cnJlbnQgeWVhciBhbmQgcHJldmlvdXMgbW9udGggb3Igd2VlayBhcmUgdmFsaWQuIEZ1dHVyZVxuICAgKiAgIGRhdGVzIGFyZSBub3Qgc3VwcG9ydGVkLlxuICAgKiBAcmV0dXJuIHtQcm9taXNlLjxSZXNwb25zZSxSZXNwb25zZUVycm9yPn0gYSBQcm9taXNlXG4gICAqXG4gICAqIEZpbmQgdGhlIGFpciB0cmFmZmljIGZyb20gTEhSIGluIEphbnVhcnkgMjAxMVxuICAgKlxuICAgKiBgYGBqc1xuICAgKiBhbWFkZXVzLnRyYXZlbC5hbmFseXRpY3MuZmFyZVNlYXJjaGVzLmdldCh7XG4gICAqICAgb3JpZ2luOiAnTEhSJyxcbiAgICogICBwZXJpb2Q6ICcyMDExLTAxJ1xuICAgKiB9KTtcbiAgICogYGBgXG4gICAqL1xuICBnZXQocGFyYW1zID0ge30pIHtcbiAgICByZXR1cm4gdGhpcy5jbGllbnQuZ2V0KCcvdjEvdHJhdmVsL2FuYWx5dGljcy9mYXJlLXNlYXJjaGVzJywgcGFyYW1zKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBGYXJlU2VhcmNoZXM7XG4iXX0=