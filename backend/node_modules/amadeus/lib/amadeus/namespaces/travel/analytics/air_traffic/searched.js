'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
 * A namespaced client for the
 * `/v1/travel/analytics/air-traffic/searched` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.travel.analytics.AirTraffic.Searched;
 * ```
 *
 * @param {Client} client
 */
var Searched = function () {
  function Searched(client) {
    _classCallCheck(this, Searched);

    this.client = client;
  }

  /**
   * Returns a list of air traffic reports based on the number of people searching.
   *
   * @param {Object} params
   * @param {string} params.originCityCode IATA code of the origin city - e.g. MAD for
   *   Madrid - required
   * @param {string} params.searchPeriod period when consumers are travelling in
   *   YYYY-MM format
   * @param {string} params.marketCountryCode IATA code of the country from which searches were made
   *   e.g. ``"ES"`` for Spain
   * @return {Promise.<Response,ResponseError>} a Promise
   *
   * Which were the most searched flight destinations from Madrid in August 2017?
   *
   * ```js
   * amadeus.travel.analytics.AirTraffic.Searched.get({
   *   originCityCode: 'MAD',
   *   searchPeriod: '2017-08',
   *   marketCountryCode: 'ES'
   * });
   * ```
   */


  _createClass(Searched, [{
    key: 'get',
    value: function get() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      return this.client.get('/v1/travel/analytics/air-traffic/searched', params);
    }
  }]);

  return Searched;
}();

exports.default = Searched;
module.exports = exports['default'];
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3NyYy9hbWFkZXVzL25hbWVzcGFjZXMvdHJhdmVsL2FuYWx5dGljcy9haXJfdHJhZmZpYy9zZWFyY2hlZC5qcyJdLCJuYW1lcyI6WyJTZWFyY2hlZCIsImNsaWVudCIsInBhcmFtcyIsImdldCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBOzs7Ozs7Ozs7Ozs7O0lBYU1BLFE7QUFDSixvQkFBWUMsTUFBWixFQUFvQjtBQUFBOztBQUNsQixTQUFLQSxNQUFMLEdBQWNBLE1BQWQ7QUFDRDs7QUFFRDs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7MEJBc0JpQjtBQUFBLFVBQWJDLE1BQWEsdUVBQUosRUFBSTs7QUFDZixhQUFPLEtBQUtELE1BQUwsQ0FBWUUsR0FBWixDQUFnQiwyQ0FBaEIsRUFBNkRELE1BQTdELENBQVA7QUFDRDs7Ozs7O2tCQUdZRixRIiwiZmlsZSI6InNlYXJjaGVkLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIG5hbWVzcGFjZWQgY2xpZW50IGZvciB0aGVcbiAqIGAvdjEvdHJhdmVsL2FuYWx5dGljcy9haXItdHJhZmZpYy9zZWFyY2hlZGAgZW5kcG9pbnRzXG4gKlxuICogQWNjZXNzIHZpYSB0aGUge0BsaW5rIEFtYWRldXN9IG9iamVjdFxuICpcbiAqIGBgYGpzXG4gKiBsZXQgYW1hZGV1cyA9IG5ldyBBbWFkZXVzKCk7XG4gKiBhbWFkZXVzLnRyYXZlbC5hbmFseXRpY3MuQWlyVHJhZmZpYy5TZWFyY2hlZDtcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7Q2xpZW50fSBjbGllbnRcbiAqL1xuY2xhc3MgU2VhcmNoZWQge1xuICBjb25zdHJ1Y3RvcihjbGllbnQpIHtcbiAgICB0aGlzLmNsaWVudCA9IGNsaWVudDtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgbGlzdCBvZiBhaXIgdHJhZmZpYyByZXBvcnRzIGJhc2VkIG9uIHRoZSBudW1iZXIgb2YgcGVvcGxlIHNlYXJjaGluZy5cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IHBhcmFtc1xuICAgKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLm9yaWdpbkNpdHlDb2RlIElBVEEgY29kZSBvZiB0aGUgb3JpZ2luIGNpdHkgLSBlLmcuIE1BRCBmb3JcbiAgICogICBNYWRyaWQgLSByZXF1aXJlZFxuICAgKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLnNlYXJjaFBlcmlvZCBwZXJpb2Qgd2hlbiBjb25zdW1lcnMgYXJlIHRyYXZlbGxpbmcgaW5cbiAgICogICBZWVlZLU1NIGZvcm1hdFxuICAgKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLm1hcmtldENvdW50cnlDb2RlIElBVEEgY29kZSBvZiB0aGUgY291bnRyeSBmcm9tIHdoaWNoIHNlYXJjaGVzIHdlcmUgbWFkZVxuICAgKiAgIGUuZy4gYGBcIkVTXCJgYCBmb3IgU3BhaW5cbiAgICogQHJldHVybiB7UHJvbWlzZS48UmVzcG9uc2UsUmVzcG9uc2VFcnJvcj59IGEgUHJvbWlzZVxuICAgKlxuICAgKiBXaGljaCB3ZXJlIHRoZSBtb3N0IHNlYXJjaGVkIGZsaWdodCBkZXN0aW5hdGlvbnMgZnJvbSBNYWRyaWQgaW4gQXVndXN0IDIwMTc/XG4gICAqXG4gICAqIGBgYGpzXG4gICAqIGFtYWRldXMudHJhdmVsLmFuYWx5dGljcy5BaXJUcmFmZmljLlNlYXJjaGVkLmdldCh7XG4gICAqICAgb3JpZ2luQ2l0eUNvZGU6ICdNQUQnLFxuICAgKiAgIHNlYXJjaFBlcmlvZDogJzIwMTctMDgnLFxuICAgKiAgIG1hcmtldENvdW50cnlDb2RlOiAnRVMnXG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICovXG4gIGdldChwYXJhbXMgPSB7fSkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5nZXQoJy92MS90cmF2ZWwvYW5hbHl0aWNzL2Fpci10cmFmZmljL3NlYXJjaGVkJywgcGFyYW1zKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBTZWFyY2hlZDsiXX0=